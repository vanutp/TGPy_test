name: Lint & release project
on:
  push:
    paths:
      - "pyproject.toml"
      - "poetry.lock"
      - "tgpy/**"
      - ".github/workflows/main.yml"
      - ".github/workflows/docker.yml"
  pull_request:
    paths:
      - "pyproject.toml"
      - "poetry.lock"
      - "tgpy/**"
      - ".github/workflows/main.yml"
      - ".github/workflows/docker.yml"
  workflow_dispatch: {}

jobs:
  create-release:
    name: Create release
    concurrency: release
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: DeterminateSystems/nix-installer-action@main

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Load dependency cache
        id: load-cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: app-${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}

      - uses: nicknovitski/nix-develop@v1

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --with release
        if: steps.load-cache.outputs.cache-hit != 'true'

      - name: Create a release
        id: release-version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source .venv/bin/activate
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          python -m semantic_release version

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Save release commit hash
        id: release-commit-hash
        run: echo "release-commit-hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    outputs:
      release-commit-hash: ${{ steps.release-commit-hash.outputs.release-commit-hash }}
      version-tag: ${{ steps.release-version.outputs.version-tag }}

  # build-dev-docker:
  #   needs: lint
  #   name: Build dev docker image
  #   if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref != 'refs/heads/master'
  #   uses: ./.github/workflows/docker.yml
  #   secrets: inherit

  # build-release-docker:
  #   name: Build release docker image
  #   needs: release
  #   if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
  #   uses: ./.github/workflows/docker.yml
  #   with:
  #     commit-hash: ${{ needs.release.outputs.release-commit-hash }}
  #   secrets: inherit
